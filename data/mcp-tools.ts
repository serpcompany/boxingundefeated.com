import type { MCP } from '~/types/Mcp'

/**
 * Mock MCP tools data for development and testing
 * Structured to match playbooks.com design and content patterns.
 */
export const mockMCPTools: MCP[] = [
  {
    id: 'brave-search',
    slug: 'brave-search',
    name: 'Brave Search',
    description: 'Web search capabilities using Brave Search API. Get current information and search results.',
    author: 'Brave Software',
    icon: 'https://cdn.jsdelivr.net/gh/brave/brave-browser@master/android/java/res/mipmap-hdpi/ic_launcher.png',
    tags: ['search', 'web', 'api', 'current-events'],
    category: 'Productivity',
    compatibility: ['claude-desktop', 'cline'],
    views: 2847,
    copies: 892,
    likes: 156,
    githubUrl: 'https://github.com/brave/brave-search-mcp',
    documentation: 'https://github.com/brave/brave-search-mcp#readme',
    createdAt: '2024-11-15T10:30:00Z',
    updatedAt: '2024-12-01T14:22:00Z',
    prompt: 'I want you to act as a web search assistant who can access current information from the internet using Brave Search. You should be able to search for recent news, current events, and up-to-date information on any topic.',
    howToUse: [
      'Replace {query} with your specific search terms',
      'Be as specific as possible for better results',
      'Use quotes for exact phrase matching',
      'You can search for recent news, current events, or general information',
    ],
    examples: [
      'Search for "latest AI developments 2024"',
      'Find current stock prices for Apple',
      'Look up recent news about climate change',
      'Search for "best restaurants in San Francisco 2024"',
    ],
    whatToExpect: [
      'Current and up-to-date search results',
      'Relevant web pages and articles',
      'Recent news and information',
      'Structured search data with links and descriptions',
    ],
    tips: [
      'Use specific keywords for more targeted results',
      'Include date ranges when searching for time-sensitive information',
      'Combine multiple search terms with AND/OR operators',
      'Check multiple sources for important information',
    ],
  },
  {
    id: 'filesystem',
    slug: 'filesystem',
    name: 'File System',
    description: 'Secure file operations including reading, writing, and managing files and directories.',
    author: 'Anthropic',
    icon: 'https://raw.githubusercontent.com/anthropics/mcp-filesystem/main/icon.png',
    tags: ['filesystem', 'files', 'directories', 'core'],
    category: 'Development',
    compatibility: ['claude-desktop', 'cline', 'mcpx'],
    views: 4523,
    copies: 1834,
    likes: 287,
    githubUrl: 'https://github.com/anthropics/mcp-filesystem',
    documentation: 'https://modelcontextprotocol.io/docs/tools/filesystem',
    createdAt: '2024-10-25T09:15:00Z',
    updatedAt: '2024-12-03T11:45:00Z',
  },
  {
    id: 'postgres',
    slug: 'postgres',
    name: 'PostgreSQL',
    description: 'Connect to and query PostgreSQL databases. Execute SQL commands and manage database schemas.',
    author: 'PostgreSQL Community',
    icon: 'https://wiki.postgresql.org/images/a/a4/PostgreSQL_logo.3colors.svg',
    tags: ['database', 'sql', 'postgresql', 'data'],
    category: 'Database',
    compatibility: ['claude-desktop', 'cline'],
    views: 1847,
    copies: 542,
    likes: 89,
    githubUrl: 'https://github.com/postgres/mcp-postgres',
    documentation: 'https://github.com/postgres/mcp-postgres/wiki',
    createdAt: '2024-11-08T13:20:00Z',
    updatedAt: '2024-11-28T16:10:00Z',
  },
  {
    id: 'github',
    slug: 'github',
    name: 'GitHub',
    description: 'Interact with GitHub repositories, issues, pull requests, and manage code collaboratively.',
    author: 'GitHub',
    icon: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',
    tags: ['github', 'git', 'repositories', 'collaboration'],
    category: 'Development',
    compatibility: ['claude-desktop', 'cline', 'mcpx'],
    views: 3829,
    copies: 1247,
    likes: 203,
    githubUrl: 'https://github.com/github/mcp-github',
    documentation: 'https://docs.github.com/en/mcp',
    createdAt: '2024-11-01T08:45:00Z',
    updatedAt: '2024-12-02T10:30:00Z',
  },
  {
    id: 'slack',
    slug: 'slack',
    name: 'Slack',
    description: 'Send messages, manage channels, and interact with Slack workspaces programmatically.',
    author: 'Slack Technologies',
    icon: 'https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png',
    tags: ['slack', 'messaging', 'teams', 'communication'],
    category: 'Productivity',
    compatibility: ['claude-desktop'],
    views: 2890,
    copies: 567,
    likes: 89,
    githubUrl: 'https://github.com/slackapi/mcp-slack',
    documentation: 'https://api.slack.com/mcp',
    createdAt: '2024-11-12T15:00:00Z',
    updatedAt: '2024-11-25T12:15:00Z',
  },
  {
    id: 'sqlite',
    slug: 'sqlite',
    name: 'SQLite',
    description: 'Local SQLite database operations. Create, query, and manage lightweight SQL databases.',
    author: 'SQLite Team',
    icon: 'https://www.sqlite.org/images/sqlite370_banner.gif',
    tags: ['database', 'sqlite', 'local', 'sql'],
    category: 'Database',
    compatibility: ['claude-desktop', 'cline', 'mcpx'],
    views: 5670,
    copies: 1203,
    likes: 234,
    githubUrl: 'https://github.com/sqlite/mcp-sqlite',
    documentation: 'https://sqlite.org/mcp.html',
    createdAt: '2024-10-30T11:30:00Z',
    updatedAt: '2024-11-20T14:45:00Z',
  },
  {
    id: 'memory',
    slug: 'memory',
    name: 'Memory',
    description: 'Persistent memory capabilities for maintaining context across conversations and sessions.',
    author: 'Anthropic',
    icon: 'https://raw.githubusercontent.com/anthropics/mcp-memory/main/icon.png',
    tags: ['memory', 'context', 'persistence', 'core'],
    category: 'AI/ML',
    compatibility: ['claude-desktop', 'cline'],
    views: 12450,
    copies: 2890,
    likes: 456,
    githubUrl: 'https://github.com/anthropics/mcp-memory',
    documentation: 'https://modelcontextprotocol.io/docs/tools/memory',
    createdAt: '2024-10-20T07:00:00Z',
    updatedAt: '2024-12-01T09:30:00Z',
  },
  {
    id: 'puppeteer',
    slug: 'puppeteer',
    name: 'Puppeteer',
    description: 'Web automation and scraping using Puppeteer. Control browsers and extract web data.',
    author: 'Google Chrome Team',
    icon: 'https://user-images.githubusercontent.com/10379601/29446482-04f7036a-841f-11e7-9872-91d1fc2ea683.png',
    tags: ['puppeteer', 'automation', 'scraping', 'browser'],
    category: 'Automation',
    compatibility: ['claude-desktop', 'cline'],
    views: 4320,
    copies: 756,
    likes: 98,
    githubUrl: 'https://github.com/puppeteer/mcp-puppeteer',
    documentation: 'https://pptr.dev/mcp',
    createdAt: '2024-11-05T16:20:00Z',
    updatedAt: '2024-11-22T13:40:00Z',
  },
  {
    id: 'gdrive',
    slug: 'gdrive',
    name: 'Google Drive',
    description: 'Access and manage Google Drive files. Upload, download, and organize cloud storage.',
    author: 'Google',
    icon: 'https://developers.google.com/drive/images/drive_icon.png',
    tags: ['google-drive', 'cloud-storage', 'files', 'sync'],
    category: 'Productivity',
    compatibility: ['claude-desktop'],
    views: 1980,
    copies: 423,
    likes: 67,
    githubUrl: 'https://github.com/google/mcp-gdrive',
    documentation: 'https://developers.google.com/drive/mcp',
    createdAt: '2024-11-18T12:10:00Z',
    updatedAt: '2024-11-30T15:25:00Z',
  },
  {
    id: 'email',
    slug: 'email',
    name: 'Email',
    description: 'Send and manage emails through various providers. SMTP and API integration support.',
    author: 'Email MCP Team',
    icon: 'https://cdn-icons-png.flaticon.com/512/732/732200.png',
    tags: ['email', 'smtp', 'communication', 'notifications'],
    category: 'Productivity',
    compatibility: ['claude-desktop', 'cline'],
    views: 3450,
    copies: 634,
    likes: 123,
    githubUrl: 'https://github.com/mcp-email/mcp-email',
    documentation: 'https://mcp-email.github.io/docs',
    createdAt: '2024-11-10T14:30:00Z',
    updatedAt: '2024-11-26T11:50:00Z',
  },
  {
    id: 'aws-s3',
    slug: 'aws-s3',
    name: 'AWS S3',
    description: 'Amazon S3 bucket operations. Upload, download, and manage cloud object storage.',
    author: 'Amazon Web Services',
    icon: 'https://upload.wikimedia.org/wikipedia/commons/b/bc/Amazon-S3-Logo.svg',
    tags: ['aws', 's3', 'cloud-storage', 'amazon'],
    category: 'Development',
    compatibility: ['claude-desktop', 'cline'],
    views: 4560,
    copies: 891,
    likes: 145,
    githubUrl: 'https://github.com/aws/mcp-s3',
    documentation: 'https://docs.aws.amazon.com/s3/mcp/',
    createdAt: '2024-11-02T09:45:00Z',
    updatedAt: '2024-11-24T16:20:00Z',
  },
  {
    id: 'todoist',
    slug: 'todoist',
    name: 'Todoist',
    description: 'Task management with Todoist. Create, update, and organize your tasks and projects.',
    author: 'Doist',
    icon: 'https://todoist.com/help/assets/images/introduction/todoist-icon.png',
    tags: ['todoist', 'tasks', 'productivity', 'organization'],
    category: 'Productivity',
    compatibility: ['claude-desktop'],
    views: 1420,
    copies: 289,
    likes: 45,
    githubUrl: 'https://github.com/doist/mcp-todoist',
    documentation: 'https://developer.todoist.com/mcp',
    createdAt: '2024-11-14T10:15:00Z',
    updatedAt: '2024-11-29T14:35:00Z',
  },
]

/**
 * Get all available MCP categories.
 * @returns Array of unique category names sorted alphabetically.
 */
export function getMCPCategories() {
  const categories = new Set(mockMCPTools.map(tool => tool.category))
  return Array.from(categories).sort()
}

/**
 * Get all available tags.
 * @returns Array of unique tag names sorted alphabetically.
 */
export function getMCPTags() {
  const tags = new Set(mockMCPTools.flatMap(tool => tool.tags))
  return Array.from(tags).sort()
}

/**
 * Get compatibility options.
 * @returns Array of unique compatibility options sorted alphabetically.
 */
export function getCompatibilityOptions() {
  const compatibility = new Set(mockMCPTools.flatMap(tool => tool.compatibility))
  return Array.from(compatibility).sort()
}
